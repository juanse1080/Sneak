const requestUrl = "https://api.unsplash.com/search/photos?query=london&client_id=ozSSrsBNNbC6KZm4X9QCpRBlM_nm6PXursiuRyTPTYo", urlSearchParams = new URLSearchParams(window.location.search), params = Object.fromEntries(urlSearchParams.entries()), defaultData = [{ hash: window.location.hash || "#home", portfolio: params.portfolio || "all", view: params.view || "grid" }, `page ${window.location.hash || "#home"}`, window.location.toString()]; async function loadData() { const e = await getImages(requestUrl.replace("london", defaultData[0].portfolio)); update({ portfolio: defaultData[0].portfolio }, document.getElementById("filters").querySelector(`[data-value="${defaultData[0].portfolio}"]`)), update({ view: defaultData[0].view }, document.getElementById("views").querySelector(`[data-value="${defaultData[0].view}"]`)), console.log(document.getElementById("views"), document.getElementById("views").querySelector(`[data-value="${defaultData[0].view}"]`), defaultData[0].portfolio, defaultData[0].view), pushImage(e) } function loadEvents() { const e = document.getElementsByClassName("filter"); for (let t = 0; t < e.length; t++)e[t].addEventListener("click", async function (e) { const { value: t } = e.target.dataset; update({ ...getData(0), portfolio: t }, e.target), pushImage(await getImages(requestUrl.replace("london", t))) }); const t = document.getElementsByClassName("view"); for (let e = 0; e < t.length; e++)t[e].addEventListener("click", function (e) { const { value: t } = e.target.dataset; update({ ...getData(0), view: t }, e.target) }); const a = document.getElementById("bar"); a.addEventListener("click", function (e) { document.getElementById("bar-container").classList.toggle("d-flex") }), document.addEventListener("mousedown", function (e) { e.target !== a && document.getElementById("bar-container").classList.remove("d-flex") }) } async function getImages(e) { return loading(), fetch(e).then(e => e.json()).then(e => e.results) } function getData(e, t) { const a = JSON.parse(localStorage.getItem("data")); return e && t ? t[e][t] : e ? t[e] : t ? a[t] : a } function setData(e, t, a) { if (t && a) { let o = localStorage.getItem("data"); o[t] = { ...o[t], [a]: e }, localStorage.setItem("data", JSON.stringify(o)) } else if (t) { let a = localStorage.getItem("data"); a[t] = { ...a[t], ...e }, localStorage.setItem("data", JSON.stringify(a)) } else localStorage.setItem("data", JSON.stringify(e)) } function updateUrlParameter(e, t, a) { var o = e.indexOf("#"), n = -1 === o ? "" : e.substr(o); e = -1 === o ? e : e.substr(0, o); var l = new RegExp("([?&])" + t + "=.*?(&|$)", "i"), i = -1 !== e.indexOf("?") ? "&" : "?"; return null === a ? ("?" === (e = e.replace(new RegExp("([?&]?)" + t + "=[^&]*", "i"), "")).slice(-1) && (e = e.slice(0, -1)), -1 === e.indexOf("?") && (e = e.replace(/&/, "?"))) : e = e.match(l) ? e.replace(l, "$1" + t + "=" + a + "$2") : e + i + t + "=" + a, e + n } function update(e, t) { let { portfolio: a, view: o } = getData(0), { portfolio: n, view: l } = e, i = window.location.toString(); if (console.log(t), a === n && o === l) return; a !== n && (i = updateUrlParameter(i, "portfolio", n), changeActive(document.getElementById("filters"), "portfolio", t)), o !== l && (i = updateUrlParameter(i, "view", l), changeActive(document.getElementById("views"), "view", t)); const r = [{ hash: window.location.hash, portfolio: n, view: l }, "page " + window.location.hash, i]; setData(r), history.pushState(...r) } function pushImage(e) { const t = document.getElementById("images"), a = e.reduce((e, t, a) => e + `\n    <div class="portfolio-grid-item item-${a}">\n      <div style="background-image: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url(${t.urls.regular})" data-label="${t.alt_description}" class="responsive-img"></div>\n    </div>\n  `, ""); t.innerHTML = a } function loading() { const e = document.getElementById("images"), t = new Array(10).fill(0).reduce((e, t, a) => e + `\n    <div class="portfolio-grid-item item-${a}">\n      <div class="pulse"></div>\n    </div>\n  `, ""); e.innerHTML = t } function changeActive(e, t, a) { const o = e.querySelector(".active"); o && o.dataset.value === getData(0, t) || (o && (o.ariaSelected = "false", o.classList.remove("active")), a.ariaSelected = "true", a.classList.add("active")) } loadEvents(), loadData();